{
  "extends": ["tslint-config-airbnb", "tslint-react"],
  "linterOptions": {
    "exclude": [
      "config/**/*.js",
      "src/**/**/**.js",
      "src/**/**/**.json",
      "src/mocks/**/**/*.**",
      "node_modules/**/*.ts",
      "node_modules/**/*.ts",
      "node_modules/**/*.ts",
      "coverage/**/*.js",
      "./src/serviceWorker.ts"
    ]
  },
  "rules": {
    // This rule is here for now because of https://github.com/palantir/tslint-react/issues/120
    "variable-name": [
      true,
      "ban-keywords",
      "check-format",
      "allow-pascal-case",
      "allow-leading-underscore"
    ],
    // uuid library and various other legacy libraries in use have unforunate
    // need for the requires statement
    "no-var-requires": false,
    // uuid library which has an unforunated submodule import
    "no-submodule-imports": false,
    // below is a fairly opinionated suggestion, we use types primarily because thats
    // exactly what our code is using it for- as a "type" not an interface to be implemented
    "interface-over-type-literal": false,
    // never use semi-colons
    "semicolon": [true, "never"],
    // disallow trailing commas
    "trailing-comma": false,
    "prefer-const": [true, { "destructuring": "all" }],
    // ignore single line template vars. eg let x = `hello ${myvarname}` and lines with comments in them
    "max-line-length": [
      true,
      { "limit": 120, "ignore-pattern": "`(.+)`|(.*)//(.*)" }
    ],
    // When this codebase becomes much more mature removing the line below could be considered
    "no-console": false,
    "interface-name": [true, "never-prefix"],
    // the closer jsx looks like an html template the better
    "jsx-no-multiline-js": false
  }
}
